description: |
  Packages a new Operator and pushes it to Snyk's fork of
  the redhat-openshift-ecosystem/community-operators-prod.

executor: redhat-openshift/default

working_directory: ~/kubernetes-monitor

steps:
  - checkout

  - add_ssh_keys:
      fingerprints:
        - 5a:63:89:5d:a1:71:fb:a4:ed:c5:ec:4c:1e:0b:c7:3a

  - run:
      name: Install required packages
      command: |
        python -m pip install requests pyyaml PyGithub

  - install_python_requests

  - run:
      name: Get last released Operator version
      command: |
        set -xeo pipefail
        OPERATOR_REPO_URL="https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-prod/main/operators/snyk-operator/snyk-operator.package.yaml"

        LAST_OPERATOR_VERSION=$(python ./scripts/operator/get_last_published_operator_version.py $OPERATOR_REPO_URL)
        echo "export LAST_OPERATOR_VERSION=${LAST_OPERATOR_VERSION}" >> $BASH_ENV

  - run:
      name: Get new Operator version
      command: |
        LATEST_TAG_WITH_V=`git describe --abbrev=0 --tags ${CIRCLE_SHA1}`
        LATEST_TAG=${LATEST_TAG_WITH_V:1}
        NEW_OPERATOR_VERSION=${LATEST_TAG}
        echo "export NEW_OPERATOR_VERSION=${NEW_OPERATOR_VERSION}" >> $BASH_ENV

  - run:
      name: End tests early if no new Operator is to be released
      command: |
        if [[ "${NEW_OPERATOR_VERSION}" == "${LAST_OPERATOR_VERSION}" ]]; then
          echo "export NOTHING_TO_TEST=true" >> $BASH_ENV
          exit 1
        fi

  - run:
      name: Package Operator Bundle
      command: |
        SNYK_MONITOR_TAG="${NEW_OPERATOR_VERSION}-ubi8"
        OPERATOR_PATH=$(python scripts/operator/package_operator_bundle.py "${NEW_OPERATOR_VERSION}" "${NEW_OPERATOR_VERSION}" "${SNYK_MONITOR_TAG}" "${LAST_OPERATOR_VERSION}")
        echo "export OPERATOR_PATH=${OPERATOR_PATH}" >> $BASH_ENV

  - run:
      name: Push new Operator to the fork of the redhat-openshift-ecosystem/community-operators-prod repository
      command: |
        CURRENT_DIRECTORY=$(pwd)
        COMMUNITY_FOLDER_LOCATION="community-operators-prod"
        ./scripts/operator/push-operator-to-snyk-upstream.sh "${CURRENT_DIRECTORY}" "${COMMUNITY_FOLDER_LOCATION}"
        echo "export COMMUNITY_FOLDER_LOCATION=${COMMUNITY_FOLDER_LOCATION}" >> $BASH_ENV

  - run:
      name: Open a Pull Request to the redhat-openshift-ecosystem/community-operators-prod repository
      command: |
        SLACK_PR_URL=$(python ./scripts/operator/raise_pr_to_embedded_community_operators_from_our_fork.py "${COMMUNITY_FOLDER_LOCATION}" "${NEW_OPERATOR_VERSION}")
        echo "export SLACK_PR_URL=${SLACK_PR_URL}" >> $BASH_ENV

  - run:
      name: Notify Slack on new branch in snyk/community-operators-prod
      command: |
        ./scripts/slack/notify_success_operator_push.py "${NEW_OPERATOR_VERSION}" "${COMMUNITY_FOLDER_LOCATION}" "${SLACK_PR_URL}"

  - run:
      name: Notify Slack on failure
      when: on_fail
      command: |
        if [[ "${NOTHING_TO_TEST}" != "true" ]]; then
          ./scripts/slack/notify_failure.py "${CIRCLE_BRANCH}" "${CIRCLE_JOB}" "${CIRCLE_BUILD_URL}" "${CIRCLE_PULL_REQUEST}" "${SLACK_WEBHOOK}"
        fi
